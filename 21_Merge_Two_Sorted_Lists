# Definition for singly-linked list.
# class ListNode:
#     def __init__(self, x):
#         self.val = x
#         self.next = None

class Solution:
    def mergeTwoLists(self, l1: ListNode, l2: ListNode) -> ListNode:
        current1= l1
        current2 = l2
        if l2.val <= l1.val:
            l2 = l2.next #remove current node from l2
            l1 , l1.next = current2, current1
            current2 = l2
        # print(current1.val)
        while current2:
            if current2.val <= current1.next.val:
                l2 = l2.next #remove current node from l2
                current2.next = current1.next 
                current1.next = current2
                current2 = l2
            else: 
                current1 = current1.next
        return l1
       
      
# Time limit Exceeded
class Solution:
    def mergeTwoLists(self, l1: ListNode, l2: ListNode) -> ListNode:
        current1= l1
        current2 = l2
        if l2.val <= l1.val:
            l2 = l2.next #remove current node from l2
            l1 , l1.next = current2, current1
            current2 = l2
            print('l1:', l1.val)
        while current2:
            current1 = l1
            while current1:
                
                if current2.val <= current1.next.val:
                    l2 = l2.next #remove current node from l2
                    current2.next = current1.next #link add node next to original next site
                    current1.next = current2 #link original node next to add node next
                    current2 = l2 #c2 is new l2, c2 is moving
                    break

                else: 
                    print('c1.val, c2.val:', current1.val, current2.val)    
                    current1 = current1.next
                print('c1.val, c2.val:', current1.val, current2.val)    
                if current1.next == None:
                    if current2:
                        current1.next = current2
            break
        return l1
            
